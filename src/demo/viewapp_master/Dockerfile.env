# 第一階段-建置編譯環境
FROM debian:latest AS build-env

# 時區
ENV TZ=Asia/Taipei
RUN echo "${TZ}" > /etc/timezone
RUN ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime

# 安裝 Flutter 相依套件
RUN apt-get update && \
    apt-get install -y curl git wget unzip libgconf-2-4 gdb libstdc++6 libglu1-mesa fonts-droid-fallback lib32stdc++6 python3 sed \
    clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev && \
    apt-get clean

# 抓取Flutter相關函式庫
RUN git config --global core.compression 0
RUN git config --global http.version HTTP/1.1
RUN git config --global http.postBuffer 524288000
RUN git clone --depth 1 https://github.com/flutter/flutter.git /usr/local/flutter || \
    (echo "Retrying..." && git clone https://github.com/flutter/flutter.git /usr/local/flutter)

# 設置 Flutter 預設路徑
ENV PATH="${PATH}:/usr/local/flutter/bin:/usr/local/flutter/bin/cache/dart-sdk/bin"

# Run flutter doctor
RUN flutter channel stable && \
    flutter upgrade
RUN flutter doctor -v

# 建立 Web 應用程式
RUN mkdir /app
COPY . /app
WORKDIR /app
RUN flutter clean && \
    flutter pub get
RUN flutter build web

# 第二階段-建立提供實時運作的服務
FROM nginx:alpine

# 復制編譯好的檔案
COPY --from=build-env /app/build/web /usr/share/nginx/html

# 時區
ENV TZ=Asia/Taipei
RUN echo "${TZ}" > /etc/timezone
RUN ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime

# 連結埠
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
